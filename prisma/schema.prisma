

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  lastName  String
  username  String   @unique
  email     String   @unique
  password  String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones con gastos
  expenseConfigs ExpenseConfig[]
  monthlyBudgets MonthlyBudget[]
  expenses        Expense[]
  monthlyData     MonthlyData[]
}

model ExpenseConfig {
  id                Int     @id @default(autoincrement())
  userId            Int
  needsPercentage   Int
  wantsPercentage   Int
  savingsPercentage Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model MonthlyBudget {
  id                Int      @id @default(autoincrement())
  userId            Int
  month             String   // Formato: "YYYY-MM"
  year              Int
  income            Int
  needsBudget       Int
  wantsBudget       Int
  savingsBudget     Int
  accumulatedSavings Int     @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  expenses Expense[]
  monthlyData MonthlyData[]
}

model Expense {
  id            Int      @id @default(autoincrement())
  userId        Int
  monthlyBudgetId Int?
  category      String   // "needs" | "wants" | "savings"
  subcategory   String
  description   String?
  amount        Int
  date          DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  monthlyBudget MonthlyBudget? @relation(fields: [monthlyBudgetId], references: [id], onDelete: SetNull)
}

model MonthlyData {
  id                Int      @id @default(autoincrement())
  userId            Int
  monthlyBudgetId  Int
  month             String   // Formato: "YYYY-MM"
  year              Int
  monthName         String   // Ej: "Enero 2024"
  income            Int
  needsTotal        Int      @default(0)
  wantsTotal        Int      @default(0)
  savingsTotal      Int      @default(0)
  needsRemaining    Int      @default(0)
  wantsRemaining    Int      @default(0)
  savingsRemaining  Int      @default(0)
  totalSpent        Int      @default(0)
  totalRemaining    Int      @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  monthlyBudget MonthlyBudget @relation(fields: [monthlyBudgetId], references: [id], onDelete: Cascade)

  @@unique([userId, monthlyBudgetId])
}
